{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js-advanced-diploma/./src/js/GameState.js","webpack://js-advanced-diploma/./src/js/GamePlay.js","webpack://js-advanced-diploma/./src/js/utils.js","webpack://js-advanced-diploma/./src/js/themes.js","webpack://js-advanced-diploma/./src/js/Team.js","webpack://js-advanced-diploma/./src/js/generators.js","webpack://js-advanced-diploma/./src/js/Character.js","webpack://js-advanced-diploma/./src/js/PositionedCharacter.js","webpack://js-advanced-diploma/./src/js/cursors.js","webpack://js-advanced-diploma/./src/js/characters/Bowman.js","webpack://js-advanced-diploma/./src/js/characters/Magician.js","webpack://js-advanced-diploma/./src/js/characters/Swordsman.js","webpack://js-advanced-diploma/./src/js/characters/Daemon.js","webpack://js-advanced-diploma/./src/js/characters/Undead.js","webpack://js-advanced-diploma/./src/js/characters/Vampire.js","webpack://js-advanced-diploma/./src/js/GameController.js","webpack://js-advanced-diploma/./src/js/app.js","webpack://js-advanced-diploma/./src/js/GameStateService.js"],"sourcesContent":["export default class GameState {\r\n  constructor() {\r\n    this.heroesList = [];\r\n    this.characterSelected = null;\r\n    this.permissionMove = true;\r\n    this.level = 1;\r\n    this.statistic = [];\r\n    this.points = 0;\r\n    this.deleteRival = [];\r\n\r\n  }\r\n  \r\n  static from(object) {\r\n    // TODO: create object\\\r\n    if (typeof object === 'object') {\r\n      return object;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { calcHealthLevel, calcTileType } from './utils';\r\nimport GameState from './GameState'\r\n\r\nexport default class GamePlay {\r\n  constructor() {\r\n    this.gameState = new GameState();\r\n    this.boardSize = 8;\r\n    this.container = null;\r\n    this.boardEl = null;\r\n    this.cells = [];\r\n    this.cellClickListeners = [];\r\n    this.cellEnterListeners = [];\r\n    this.cellLeaveListeners = [];\r\n    this.newGameListeners = [];\r\n    this.saveGameListeners = [];\r\n    this.loadGameListeners = [];\r\n  }\r\n\r\n  bindToDOM(container) {\r\n    if (!(container instanceof HTMLElement)) {\r\n      throw new Error('container is not HTMLElement');\r\n    }\r\n    this.container = container;\r\n  }\r\n\r\n  /**\r\n   * Draws boardEl with specific theme\r\n   *\r\n   * @param theme\r\n   */\r\n  drawUi(theme) {\r\n    this.checkBinding();\r\n\r\n    this.container.innerHTML = `\r\n      <div class=\"controls\">\r\n        <button data-id=\"action-restart\" class=\"btn\">New Game</button>\r\n        <button data-id=\"action-save\" class=\"btn\">Save Game</button>\r\n        <button data-id=\"action-load\" class=\"btn\">Load Game</button>\r\n      </div>\r\n      <div class=\"board-container\">\r\n        <div data-id=\"board\" class=\"board\"></div>\r\n      </div>\r\n    `;\r\n\r\n    this.newGameEl = this.container.querySelector('[data-id=action-restart]');\r\n    this.saveGameEl = this.container.querySelector('[data-id=action-save]');\r\n    this.loadGameEl = this.container.querySelector('[data-id=action-load]');\r\n\r\n    this.newGameEl.addEventListener('click', event => this.onNewGameClick(event));\r\n    this.saveGameEl.addEventListener('click', event => this.onSaveGameClick(event));\r\n    this.loadGameEl.addEventListener('click', event => this.onLoadGameClick(event));\r\n\r\n    this.boardEl = this.container.querySelector('[data-id=board]');\r\n\r\n    this.boardEl.classList.add(theme);\r\n    for (let i = 0; i < this.boardSize ** 2; i += 1) {\r\n      const cellEl = document.createElement('div');\r\n      cellEl.classList.add('cell', 'map-tile', `map-tile-${calcTileType(i, this.boardSize)}`);\r\n      cellEl.addEventListener('mouseenter', event => this.onCellEnter(event));\r\n      cellEl.addEventListener('mouseleave', event => this.onCellLeave(event));\r\n      cellEl.addEventListener('click', event => this.onCellClick(event));\r\n      this.boardEl.appendChild(cellEl);\r\n    }\r\n\r\n    this.cells = Array.from(this.boardEl.children);\r\n  }\r\n\r\n  /**\r\n   * Draws positions (with chars) on boardEl\r\n   *\r\n   * @param positions array of PositionedCharacter objects\r\n   */\r\n  redrawPositions(positions) {\r\n    for (const cell of this.cells) {\r\n      cell.innerHTML = '';\r\n    }\r\n\r\n    for (const position of positions) {\r\n      const cellEl = this.boardEl.children[position.position];\r\n      const charEl = document.createElement('div');\r\n      charEl.classList.add('character', position.character.type);\r\n\r\n      const healthEl = document.createElement('div');\r\n      healthEl.classList.add('health-level');\r\n\r\n      const healthIndicatorEl = document.createElement('div');\r\n      healthIndicatorEl.classList.add('health-level-indicator', `health-level-indicator-${calcHealthLevel(position.character.health)}`);\r\n      healthIndicatorEl.style.width = `${position.character.health}%`;\r\n      healthEl.appendChild(healthIndicatorEl);\r\n\r\n      charEl.appendChild(healthEl);\r\n      cellEl.appendChild(charEl);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add listener to mouse enter for cell\r\n   *\r\n   * @param callback\r\n   */\r\n  addCellEnterListener(callback) {\r\n    this.cellEnterListeners.push(callback);\r\n  }\r\n\r\n  /**\r\n   * Add listener to mouse leave for cell\r\n   *\r\n   * @param callback\r\n   */\r\n  addCellLeaveListener(callback) {\r\n    this.cellLeaveListeners.push(callback);\r\n  }\r\n\r\n  /**\r\n   * Add listener to mouse click for cell\r\n   *\r\n   * @param callback\r\n   */\r\n  addCellClickListener(callback) {\r\n    this.cellClickListeners.push(callback);\r\n  }\r\n\r\n  /**\r\n   * Add listener to \"New Game\" button click\r\n   *\r\n   * @param callback\r\n   */\r\n  addNewGameListener(callback) {\r\n    this.newGameListeners.push(callback);\r\n  }\r\n\r\n  /**\r\n   * Add listener to \"Save Game\" button click\r\n   *\r\n   * @param callback\r\n   */\r\n  addSaveGameListener(callback) {\r\n    this.saveGameListeners.push(callback);\r\n  }\r\n\r\n  /**\r\n   * Add listener to \"Load Game\" button click\r\n   *\r\n   * @param callback\r\n   */\r\n  addLoadGameListener(callback) {\r\n    this.loadGameListeners.push(callback);\r\n  }\r\n\r\n  onCellEnter(event) {\r\n    event.preventDefault();\r\n    const index = this.cells.indexOf(event.currentTarget);\r\n    this.cellEnterListeners.forEach(o => o.call(null, index));\r\n  }\r\n\r\n  onCellLeave(event) {\r\n    event.preventDefault();\r\n    const index = this.cells.indexOf(event.currentTarget);\r\n    this.cellLeaveListeners.forEach(o => o.call(null, index));\r\n  }\r\n\r\n  onCellClick(event) {\r\n    const index = this.cells.indexOf(event.currentTarget);\r\n    this.cellClickListeners.forEach(o => o.call(null, index));\r\n  }\r\n\r\n  onNewGameClick(event) {\r\n    event.preventDefault();\r\n    this.newGameListeners.forEach(o => o.call(null));\r\n  }\r\n\r\n  onSaveGameClick(event) {\r\n    event.preventDefault();\r\n    this.saveGameListeners.forEach(o => o.call(null));\r\n  }\r\n\r\n  onLoadGameClick(event) {\r\n    event.preventDefault();\r\n    this.loadGameListeners.forEach(o => o.call(null));\r\n  }\r\n\r\n  static showError(message) {\r\n    alert(message);\r\n  }\r\n\r\n  static showMessage(message) {\r\n    alert(message);\r\n  }\r\n\r\n  selectCell(index, color = 'yellow') {\r\n    this.deselectCell(index);\r\n    this.cells[index].classList.add('selected', `selected-${color}`);\r\n  }\r\n\r\n  deselectCell(index) {\r\n    const cell = this.cells[index];\r\n    cell.classList.remove(...Array.from(cell.classList)\r\n      .filter(o => o.startsWith('selected')));\r\n  }\r\n\r\n  showCellTooltip(message, index) {\r\n    this.cells[index].title = message;\r\n  }\r\n\r\n  hideCellTooltip(index) {\r\n    this.cells[index].title = '';\r\n  }\r\n  \r\n  showDamage(index, damage) {\r\n    return new Promise((resolve) => {\r\n      const cell = this.cells[index];\r\n      const damageEl = document.createElement('span');\r\n      damageEl.textContent = damage;\r\n      damageEl.classList.add('damage');\r\n      cell.appendChild(damageEl);\r\n\r\n      damageEl.addEventListener('animationend', () => {\r\n        cell.removeChild(damageEl);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  setCursor(cursor) {\r\n    this.boardEl.style.cursor = cursor;\r\n  }\r\n\r\n  checkBinding() {\r\n    if (this.container === null) {\r\n      throw new Error('GamePlay not bind to DOM');\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @todo\r\n * @param index - индекс поля\r\n * @param boardSize - размер квадратного поля (в длину или ширину)\r\n * @returns строка - тип ячейки на поле:\r\n *\r\n * top-left\r\n * top-right\r\n * top\r\n * bottom-left\r\n * bottom-right\r\n * bottom\r\n * right\r\n * left\r\n * center\r\n *\r\n * @example\r\n * ```js\r\n * calcTileType(0, 8); // 'top-left'\r\n * calcTileType(1, 8); // 'top'\r\n * calcTileType(63, 8); // 'bottom-right'\r\n * calcTileType(7, 7); // 'left'\r\n * ```\r\n * */\r\nexport function calcTileType(index, boardSize) {\r\n  // TODO: ваш код будет тут\r\n  if (index === 0) {\r\n    return 'top-left';  \r\n  }\r\n\r\n  if (index === boardSize - 1) {\r\n    return 'top-right';\r\n  }\r\n\r\n  if (index + 1 && index < boardSize - 1) {\r\n    return 'top';\r\n  }\r\n\r\n  if (index === (boardSize * boardSize) - 1) {\r\n    return 'bottom-right';\r\n  }\r\n\r\n  if (index > boardSize * (boardSize - 1)) {\r\n    return 'bottom';\r\n  }\r\n\r\n  if (index === boardSize * (boardSize - 1)) {\r\n    return 'bottom-left';\r\n  }\r\n\r\n  if (index % boardSize === 0) {\r\n    return 'left';\r\n  }\r\n\r\n  if (index % boardSize === boardSize - 1) {\r\n    return 'right';\r\n  }\r\n\r\n  return 'center';\r\n}\r\n\r\nexport function calcHealthLevel(health) {\r\n  if (health < 15) {\r\n    return 'critical';\r\n  }\r\n\r\n  if (health < 50) {\r\n    return 'normal';\r\n  }\r\n\r\n  return 'high';\r\n}\r\n","const themes = {\r\n  1: 'prairie',\r\n  2: 'desert',\r\n  3: 'arctic',\r\n  4: 'mountain',\r\n};\r\n\r\nexport default themes;\r\n","/**\r\n * Класс, представляющий персонажей команды\r\n *\r\n * @todo Самостоятельно продумайте хранение персонажей в классе\r\n * Например\r\n * @example\r\n * ```js\r\n * const characters = [new Swordsman(2), new Bowman(1)]\r\n * const team = new Team(characters);\r\n *\r\n * team.characters // [swordsman, bowman]\r\n * ```\r\n * */\r\nexport default class Team {\r\n  // TODO: write your logic here\r\n  constructor() {\r\n    this.characters = new Set();\r\n  }\r\n\r\n  add(character) {\r\n    if (this.characters.has(character)) {\r\n      throw new Error (`Объект с именем ${character.name} уже существует`)\r\n    } else {\r\n      this.characters.add(character)\r\n    }\r\n  }\r\n\r\n  addAll(characters) {\r\n    this.characters = new Set([...this.characters, ...characters]);\r\n  }\r\n\r\n  toArray() {\r\n    return Array.from(this.characters)\r\n  }\r\n\r\n  clearSet(){\r\n    this.characters.clear()\r\n  }\r\n\r\n  delete(elem) {\r\n    this.characters.delete(elem)\r\n  }\r\n}\r\n","/**\r\n * Формирует экземпляр персонажа из массива allowedTypes со\r\n * случайным уровнем от 1 до maxLevel\r\n *\r\n * @param allowedTypes массив классов\r\n * @param maxLevel максимальный возможный уровень персонажа\r\n * @returns генератор, который при каждом вызове\r\n * возвращает новый экземпляр класса персонажа\r\n *\r\n */\r\nexport function* characterGenerator(allowedTypes, maxLevel) {\r\n  // TODO: write logic here\r\n  while(true) {\r\n    const type = Math.floor(Math.random() * allowedTypes.length);\r\n    const level = Math.floor(Math.random() * maxLevel) + 1;\r\n    yield new allowedTypes[type](level);\r\n  } \r\n}\r\n\r\n/**\r\n * Формирует массив персонажей на основе characterGenerator\r\n * @param allowedTypes массив классов\r\n * @param maxLevel максимальный возможный уровень персонажа\r\n * @param characterCount количество персонажей, которое нужно сформировать\r\n * @returns экземпляр Team, хранящий экземпляры персонажей. Количество персонажей в команде - characterCount\r\n * */\r\nexport function generateTeam(allowedTypes, maxLevel, characterCount) {\r\n  // TODO: write logic here\r\n  \r\n  const team = [];\r\n  const character = characterGenerator(allowedTypes, maxLevel);\r\n\r\n  while (team.length < characterCount) {\r\n    team.push(character.next().value);\r\n  }\r\n\r\n  return team;\r\n}\r\n","/**\r\n * Базовый класс, от которого наследуются классы персонажей\r\n * @property level - уровень персонажа, от 1 до 4\r\n * @property attack - показатель атаки\r\n * @property defence - показатель защиты\r\n * @property health - здоровье персонажа\r\n * @property type - строка с одним из допустимых значений:\r\n * swordsman\r\n * bowman\r\n * magician\r\n * daemon\r\n * undead\r\n * vampire\r\n */\r\nexport default class Character {\r\n  constructor(level, type = 'generic') {\r\n    this.level = level;\r\n    this.id = null;\r\n    this.attack = 0;\r\n    this.defence = 0;\r\n    this.health = 50;\r\n    this.type = type;\r\n    // TODO: выбросите исключение, если кто-то использует \"new Character()\"\r\n    \r\n    if (new.target.name === 'Character') {\r\n      throw new Error(\"Нельзя создавать объекты этого класса\");\r\n    }\r\n  }\r\n\r\n  levelUp() {\r\n    const healthBefore = this.health;\r\n    this.level += 1;\r\n    this.health += 80;\r\n\r\n    if (this.health > 100) {\r\n      this.health = 100;\r\n    }\r\n\r\n    this.attack = Math.max(this.attack, this.attack * ((1.8 - healthBefore) / 100));\r\n    this.defence = Math.max(this.defence, this.defence * ((1.8 - healthBefore) / 100));\r\n  }\r\n}\r\n","import Character from './Character';\r\n\r\nexport default class PositionedCharacter {\r\n  constructor(character, position) {\r\n    if (!(character instanceof Character)) {\r\n      throw new Error('character must be instance of Character or its children');\r\n    }\r\n\r\n    if (typeof position !== 'number') {\r\n      throw new Error('position must be a number');\r\n    }\r\n\r\n    this.character = character;\r\n    this.position = position;\r\n  }\r\n}\r\n","const cursors = {\r\n  auto: 'auto',\r\n  pointer: 'pointer',\r\n  crosshair: 'crosshair',\r\n  notallowed: 'not-allowed',\r\n};\r\n\r\nexport default cursors;\r\n","import Character from '../Character.js';\n\nexport default class Bowman extends Character {\n  constructor(level, type = 'bowman') {\n      super(level, type);\n      this.attack = 25;\n      this.defence = 25;\n      this.distance = 2;\n      this.cellAtack = 2;\n  }\n}\n","import Character from '../Character.js';\n\nexport default class Magician extends Character {\n  constructor(level, type = 'magician') {\n      super(level, type);\n      this.attack = 10;\n      this.defence = 40;\n      this.distance = 1;\n      this.cellAtack = 4;\n  }\n}\n","import Character from '../Character.js';\n\nexport default class Swordsman extends Character {\n  constructor(level, type = 'swordsman') {\n      super(level, type);\n      this.attack = 40;\n      this.defence = 10;\n      this.distance = 4;\n      this.cellAtack = 1;\n  }\n}\n","import Character from '../Character.js';\n\nexport default class Daemon extends Character {\n  constructor(level, type = 'daemon') {\n      super(level, type);\n      this.attack = 10;\n      this.defence = 10;\n      this.distance = 1;\n      this.cellAtack = 4;\n  }\n}\n","import Character from '../Character.js';\n\nexport default class Undead extends Character {\n  constructor(level, type = 'undead') {\n      super(level, type);\n      this.attack = 40;\n      this.defence = 10;\n      this.distance = 4;\n      this.cellAtack = 1;\n  }\n}\n","import Character from '../Character.js';\n\nexport default class Vampire extends Character {\n  constructor(level, type = 'vampire') {\n      super(level,type);\n      this.attack = 25;\n      this.defence = 25;\n      this.distance = 2;\n      this.cellAtack = 2;\n  }\n}\n","import GamePlay from './GamePlay'\r\nimport themes from './themes'\r\nimport Team from './Team'\r\nimport { generateTeam } from './generators';\r\nimport PositionedCharacter from './PositionedCharacter'\r\nimport cursors from './cursors';\r\nimport GameState from './GameState'\r\n\r\nimport Bowman from './characters/Bowman'\r\nimport Magician from './characters/Magician'\r\nimport Swordsman from './characters/Swordsman'\r\nimport Daemon from './characters/Daemon'\r\nimport Undead from './characters/Undead'\r\nimport Vampire from './characters/Vampire'\r\n\r\nexport default class GameController {\r\n  constructor(gamePlay, stateService) {\r\n    this.gamePlay = gamePlay;\r\n    this.gameState = new GameState();\r\n    this.stateService = stateService;\r\n    this.userTeam = new Team();\r\n    this.rivalTeam = new Team();\r\n    this.userHeroes = [Bowman, Swordsman, Magician];\r\n    this.rivalHeroes = [Daemon, Undead, Vampire];\r\n  }\r\n\r\n  init() {\r\n    // TODO: add event listeners to gamePlay events\r\n    // TODO: load saved stated from stateService\r\n    this.gamePlay.drawUi(themes[this.gameState.level])\r\n    this.userTeam.addAll(generateTeam(this.userHeroes, 1, 2));\r\n    this.rivalTeam.addAll(generateTeam(this.rivalHeroes, 1, 2));\r\n    this.addHeroUser(this.userTeam, this.UserPositions());\r\n    this.addHeroUser(this.rivalTeam, this.RivalPositions());\r\n    this.gamePlay.redrawPositions(this.gameState.heroesList) // Добавляем персонажей на поле\r\n    \r\n    this.gamePlay.addCellEnterListener((index) => {\r\n      this.onCellEnter(index);\r\n    });\r\n\r\n    this.gamePlay.addCellLeaveListener((index) => {\r\n      this.onCellLeave(index);\r\n    });\r\n\r\n    this.gamePlay.addCellClickListener((index) => {\r\n      this.onCellClick(index);\r\n    });\r\n\r\n    this.gamePlay.addNewGameListener(() => {\r\n      const gameController = new GameController(this.gamePlay, this.stateService);\r\n      gameController.init()\r\n    });\r\n    \r\n    this.gamePlay.addSaveGameListener(() => {\r\n      this.stateService.save(GameState.from(this.gameState));\r\n      if (localStorage.getItem(\"state\") === null) {\r\n        GamePlay.showMessage('Игра не сохранилась')\r\n      }\r\n      GamePlay.showMessage('Игра сохранена')\r\n    });\r\n\r\n    this.gamePlay.addLoadGameListener(() => {\r\n      const loadGame = this.stateService.load()\r\n      if (!loadGame) {\r\n        GamePlay.showError('Отсутствует сохраненная игра');\r\n      }\r\n      this.gameState.level = loadGame.level;\r\n      this.gamePlay.drawUi(themes[loadGame.level]);\r\n      this.gameState.permissionMove = loadGame.permissionMove;\r\n      this.gameState.heroesList = [];\r\n      this.gameState.points = loadGame.points;\r\n      this.gameState.statistic = loadGame.statistic;\r\n      this.gameState.characterSelected = loadGame.characterSelected;\r\n      this.userTeam = new Team();\r\n      this.rivalTeam = new Team();\r\n      loadGame.heroesList.forEach((elem) => {\r\n        let char;\r\n        switch (elem.character.type) {\r\n          case 'swordsman':\r\n            char = new Swordsman(elem.character.level);\r\n            this.userTeam.addAll([char]);\r\n            break;\r\n          case 'bowman':\r\n            char = new Bowman(elem.character.level);\r\n            this.userTeam.addAll([char]);\r\n            break;\r\n          case 'magician':\r\n            char = new Magician(elem.character.level);\r\n            this.userTeam.addAll([char]);\r\n            break;\r\n          case 'undead':\r\n            char = new Undead(elem.character.level);\r\n            this.rivalTeam.addAll([char]);\r\n            break;\r\n          case 'vampire':\r\n            char = new Vampire(elem.character.level);\r\n            this.rivalTeam.addAll([char]);\r\n            break;\r\n          case 'daemon':\r\n            char = new Daemon(elem.character.level);\r\n            this.rivalTeam.addAll([char]);\r\n            break;\r\n        }\r\n        char.health = elem.character.health;\r\n        this.gameState.heroesList.push(new PositionedCharacter(char, elem.position));\r\n      });\r\n\r\n      this.gamePlay.redrawPositions(this.gameState.heroesList);\r\n      GamePlay.showMessage('Игра загружена')\r\n    })\r\n  }\r\n\r\n  onCellClick(index) {\r\n    // TODO: react to click\r\n\r\n    if (this.UserIsCharacter(index) && this.gameState.permissionMove) {\r\n      this.gamePlay.cells.forEach((elem) => elem.classList.remove('selected'))\r\n      this.gamePlay.selectCell(index)\r\n      this.gameState.characterSelected = index\r\n      } else if (!this.gameState.characterSelected && this.RivalIsCharacter(index)) {\r\n        GamePlay.showError('Это не персонаж игрока');\r\n    } \r\n\r\n    // Перемещение персонажа пользователя\r\n    if (!this.UserIsCharacter(index) && this.getCellMove(index) && !this.RivalIsCharacter(index)) {\r\n      if (this.gameState.permissionMove)\r\n        this.userMoveClickCell(index);\r\n        this.gamePlay.cells.forEach((elem) => elem.classList.remove('selected-green'))\r\n    }\r\n\r\n    // Атака противника\r\n    if (this.getCharacterByindex(index) && this.RivalIsCharacter(index)) {\r\n      if (this.getCellAttack(index)) {\r\n        this.getAttack(index);\r\n        this.gamePlay.cells.forEach((elem) => elem.classList.remove('selected'))\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellEnter(index) {\r\n    // TODO: react to mouse enter \r\n\r\n    if (this.UserIsCharacter(index)) {\r\n      this.gamePlay.setCursor(cursors.pointer);\r\n    } else if (this.RivalIsCharacter(index)) {\r\n      this.gamePlay.setCursor(cursors.pointer);\r\n    } \r\n\r\n    if (this.getCharacterByindex(index)) {\r\n      const hero = this.getCharacterByindex(index).character;\r\n      const message = `\\u{1F396}${hero.level}\\u{2694}${hero.attack}\\u{1F6E1}${hero.defence}\\u{2764}${hero.health}`;\r\n      this.gamePlay.showCellTooltip(message, index);\r\n    }\r\n\r\n    // Подсвечивание ячейки где нет персонажа зеленым цветом и изменение курсора \r\n    if (!this.getCharacterByindex(index) && this.getCellMove(index)) {\r\n      this.gamePlay.setCursor(cursors.pointer);\r\n      this.gamePlay.selectCell(index, 'green');\r\n    } \r\n    \r\n    if (this.RivalIsCharacter(index) && this.getCellAttack(index)) {\r\n      this.gamePlay.setCursor(cursors.crosshair);\r\n      this.gamePlay.selectCell(index, 'red');\r\n      \r\n    } else if (this.gameState.characterSelected && this.RivalIsCharacter(index) && !this.getCellAttack(index)) {\r\n      this.gamePlay.setCursor(cursors.notallowed);\r\n    } \r\n  }\r\n\r\n  onCellLeave(index) {\r\n    // TODO: react to mouse leave\r\n    this.gamePlay.cells.forEach((elem) => elem.classList.remove('selected-red'));\r\n    this.gamePlay.cells.forEach((elem) => elem.classList.remove('selected-green'))\r\n    this.gamePlay.hideCellTooltip(index);\r\n    this.gamePlay.setCursor(cursors.auto);\r\n  }\r\n\r\n  getCharacterByindex(idx) {\r\n    // Функция возвращает объект, index которого совпадает с index клетки\r\n    return this.gameState.heroesList.find((elem) => elem.position === idx);\r\n     \r\n  } \r\n\r\n  UserIsCharacter(idx) {\r\n    // Функция возвращает true если выбранный герой совпадает с героями User из this.userHeroes\r\n    if (this.getCharacterByindex(idx)) {\r\n      const character = this.getCharacterByindex(idx).character;\r\n      return this.userHeroes.some((elem) => character instanceof elem);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  RivalIsCharacter(idx) {\r\n    // Функция возвращает true если выбранный герой совпадает с героями Rival из this.rivalHeroes\r\n    if (this.getCharacterByindex(idx)) {\r\n      const character = this.getCharacterByindex(idx).character;\r\n      return this.rivalHeroes.some((elem) => character instanceof elem);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  UserPositions() {\r\n    // Функция возможных позиций пользователя при начале игры\r\n    const size = this.gamePlay.boardSize;\r\n    this.userPosition = [];\r\n    for (let i = 0, j = 1; this.userPosition.length < size * 2; i += size, j += size) {\r\n      this.userPosition.push(i, j);\r\n    }\r\n    return this.userPosition;\r\n  }\r\n\r\n  RivalPositions() {\r\n    // Функция возможных позиций противника при начале игры\r\n    const size = this.gamePlay.boardSize;\r\n    const botPosition = [];\r\n    for (let i = size - 2, j = size - 1; botPosition.length < size * 2; i += size, j += size) {\r\n      botPosition.push(i, j);\r\n    }\r\n    return botPosition;\r\n  }\r\n\r\n  randomPosition(positions) {\r\n    const random = Math.floor(Math.random() * positions.length);\r\n    return positions[random]\r\n  }\r\n  \r\n  addHeroUser(team, positions) {\r\n    // Функция создания массива героев пользователя и противника для дальнейщего добавления их на поле\r\n    const copyPositions  = [...positions];\r\n    for (const item of team.characters) {\r\n      const random = this.randomPosition(copyPositions );\r\n      this.gameState.heroesList.push(new PositionedCharacter(item, random));\r\n      copyPositions.splice(copyPositions.indexOf(random), 1);\r\n    }\r\n  }\r\n \r\n  getCellMove(index) {\r\n    if (this.getSelectedCharacter()) {\r\n      const moving = this.getSelectedCharacter().character.distance;\r\n      const positionMove = this.calcPositionMove(this.getSelectedCharacter().position, moving);\r\n      return positionMove.includes(index);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getCellAttack(index) {\r\n    if (this.getSelectedCharacter()) {\r\n      const attack = this.getSelectedCharacter().character.cellAtack;\r\n      const positionAttack = this.calcPositionAttack(this.getSelectedCharacter(), attack);\r\n      return positionAttack.includes(index);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getSelectedCharacter() {\r\n    return this.gameState.heroesList.find((elem) => elem.position === this.gameState.characterSelected);\r\n  }\r\n\r\n  calcPositionMove(idx, char) {\r\n    const brdSize = this.gamePlay.boardSize;\r\n    const range = [];\r\n    const leftBorder = [];\r\n    const rightBorder = [];\r\n\r\n    for (let i = 0, j = brdSize - 1; leftBorder.length < brdSize; i += brdSize, j += brdSize) {\r\n      leftBorder.push(i);\r\n      rightBorder.push(j);\r\n    }\r\n\r\n    for (let i = 1; i <= char; i += 1) {\r\n      range.push(idx + (brdSize * i));\r\n      range.push(idx - (brdSize * i));\r\n    }\r\n\r\n    for (let i = 1; i <= char; i += 1) {\r\n      if (leftBorder.includes(idx)) {\r\n        break;\r\n      }\r\n      range.push(idx - i);\r\n      range.push(idx - (brdSize * i + i));\r\n      range.push(idx + (brdSize * i - i));\r\n      if (leftBorder.includes(idx - i)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i <= char; i += 1) {\r\n      if (rightBorder.includes(idx)) {\r\n        break;\r\n      }\r\n      range.push(idx + i);\r\n      range.push(idx - (brdSize * i - i));\r\n      range.push(idx + (brdSize * i + i));\r\n      if (rightBorder.includes(idx + i)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return range.filter((elem) => elem >= 0 && elem <= (brdSize ** 2 - 1));\r\n  }\r\n\r\n  calcPositionAttack(currentPosition, distance) {\r\n    const areaAttack = [];\r\n    // Клетки по вертикали\r\n    for (let i = currentPosition.position - this.gamePlay.boardSize * distance;\r\n      i <= currentPosition.position + this.gamePlay.boardSize * distance;\r\n      i += this.gamePlay.boardSize\r\n    ) {\r\n      // Клетки по горизонтали\r\n      if ((i >= 0) && (i < this.gamePlay.boardSize ** 2)) {\r\n        for (let j = i - distance; j <= i + distance; j += 1) {\r\n          if (\r\n            // Ограничиваем слева\r\n            (j >= i - (i % this.gamePlay.boardSize))\r\n            // Ограничиваем справа\r\n            && (j < i + (this.gamePlay.boardSize - (i % this.gamePlay.boardSize)))\r\n          ) {\r\n            areaAttack.push(j);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return areaAttack;\r\n  }\r\n\r\n  getAttack(index) {\r\n    if (this.gameState.permissionMove) {\r\n      const attacker = this.getCharacterByindex(this.gameState.characterSelected).character;\r\n      const target = this.getCharacterByindex(index).character;\r\n      const damage = Math.max(attacker.attack - target.defence, attacker.attack * 0.1);\r\n      if (!attacker || !target) {\r\n        return;\r\n      }\r\n      this.gamePlay.showDamage(index, damage).then(() => {\r\n        target.health -= damage;\r\n        if (target.health <= 0) {\r\n          this.getDeletion(index);\r\n          this.rivalTeam.delete(target);\r\n        }\r\n      }).then(() => {\r\n        this.gamePlay.redrawPositions(this.gameState.heroesList);\r\n      }).then(() => {\r\n        this.GameStatistic();\r\n        this.rivalResponseAttack();\r\n      });\r\n      this.gameState.permissionMove = false;\r\n    }\r\n  }\r\n\r\n  getDeletion(idx) {\r\n    const state = this.gameState.heroesList;\r\n    state.splice(state.indexOf(this.getCharacterByindex(idx)), 1);\r\n  }\r\n\r\n  // Функция движения героев пользователя в ячейку по которой был клик\r\n  userMoveClickCell(index) {\r\n    this.getSelectedCharacter().position = index;\r\n    this.gamePlay.deselectCell(this.gameState.characterSelected);\r\n    this.gamePlay.redrawPositions(this.gameState.heroesList);\r\n    this.gameState.characterSelected = index;\r\n    this.gameState.permissionMove = false;\r\n    this.rivalResponseAttack();\r\n  }\r\n\r\n  rivalResponseAttack() {\r\n    if (this.gameState.permissionMove) {\r\n      return;\r\n    }\r\n    const rivalsTeam = this.gameState.heroesList.filter((event) => (\r\n      event.character instanceof Vampire || event.character instanceof Daemon || event.character instanceof Undead\r\n    ));\r\n    const usersTeam = this.gameState.heroesList.filter((event) => (\r\n      event.character instanceof Bowman || event.character instanceof Swordsman || event.character instanceof Magician\r\n    ));\r\n\r\n    let rival = null;\r\n    let target = null;\r\n\r\n    if (rivalsTeam.length === 0 || usersTeam.length === 0) {\r\n      return;\r\n    }\r\n\r\n    rivalsTeam.forEach((elem) => {\r\n      const rangeAttack = this.calcPositionAttack(elem, elem.character.cellAtack);\r\n      usersTeam.forEach((hero) => {\r\n        if (rangeAttack.includes(hero.position)) {\r\n          rival = elem;\r\n          target = hero;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (target) {\r\n      const damage = Math.max(\r\n        rival.character.attack - target.character.defence, rival.character.attack * 0.1,\r\n      );\r\n      this.gamePlay.showDamage(target.position, damage).then(() => {\r\n        target.character.health -= damage;\r\n        if (target.character.health <= 0) {\r\n          this.getDeletion(target.position);\r\n          this.userTeam.delete(target.character);\r\n          this.gamePlay.deselectCell(this.gameState.characterSelected);\r\n        }\r\n      }).then(() => {\r\n        this.gamePlay.redrawPositions(this.gameState.heroesList);\r\n        this.gameState.permissionMove = true;\r\n        this.gameState.characterSelected = null;\r\n      }).then(() => {\r\n        this.GameStatistic();\r\n      });\r\n    } else {\r\n      rival = rivalsTeam[Math.floor(Math.random() * rivalsTeam.length)];\r\n      const rivalRange = this.calcPositionMove(rival.position, rival.character.distance);\r\n      rivalRange.forEach((event) => {\r\n        this.gameState.heroesList.forEach((i) => {\r\n          if (event === i.position) {\r\n            rivalRange.splice(rivalRange.indexOf(i.position), 1);\r\n          }\r\n        });\r\n      });\r\n      const rivalPosition = this.getRandom(rivalRange);\r\n      rival.position = rivalPosition;\r\n      this.gamePlay.redrawPositions(this.gameState.heroesList);\r\n      this.gameState.permissionMove = true;\r\n    }\r\n  }\r\n\r\n  getRandom(positions) {\r\n    this.positions = positions;\r\n    return this.positions[Math.floor(Math.random() * this.positions.length)];\r\n  }\r\n\r\n  GameStatistic() {\r\n    let sumPoints = this.gameState.statistic.reduce((a, b) => a + b, 0);\r\n    \r\n    if (this.userTeam.characters.size === 0) {\r\n      this.gameState.statistic.push(this.gameState.points);\r\n      GamePlay.showMessage(`Вы проиграли, количество очков ${sumPoints + this.gameState.points}`);\r\n    }\r\n\r\n    if (this.rivalTeam.characters.size === 0 && this.gameState.level <= 3) {\r\n      this.gameState.permissionMove = true;\r\n      this.scorePoints();\r\n      this.gameState.statistic.push(this.gameState.points);\r\n      GamePlay.showMessage(`Вы прошли уровень ${this.gameState.level}, количество очков за уровень ${this.gameState.points}`);\r\n      this.gameState.level += 1;\r\n      this.nextLevel()\r\n    }\r\n\r\n    if (this.rivalTeam.characters.size === 0 && this.gameState.level === 4) {\r\n      this.scorePoints();\r\n      this.gameState.statistic.push(this.gameState.points);\r\n      GamePlay.showMessage(`Вы прошли игру, количество очков за игру ${sumPoints + this.gameState.points}`);\r\n    }\r\n  }\r\n\r\n  scorePoints() {\r\n    this.gameState.points += this.userTeam.toArray().reduce((a, b) => a + b.health, 0);\r\n  }\r\n\r\n  nextLevel() {\r\n    this.gameState.heroesList = [];\r\n    this.userTeam.characters.forEach((char) => char.levelUp());\r\n\r\n    if (this.gameState.level === 2) {\r\n      this.userTeam.addAll(generateTeam(this.userHeroes, 2, 1));\r\n      this.rivalTeam.addAll(generateTeam(this.rivalHeroes, 2, 3));\r\n    }\r\n\r\n    if (this.gameState.level === 3) {\r\n      this.userTeam.addAll(generateTeam(this.userHeroes, 2, 0));\r\n      this.rivalTeam.addAll(generateTeam(this.rivalHeroes, 2, 3));\r\n    }\r\n\r\n    if (this.gameState.level === 4) {\r\n      this.userTeam.addAll(generateTeam(this.userHeroes, 2, 1));\r\n      this.rivalTeam.addAll(generateTeam(this.rivalHeroes, 2, 4));\r\n    }\r\n\r\n    GamePlay.showMessage(`Уровень ${this.gameState.level}`);\r\n    this.gamePlay.drawUi(themes[this.gameState.level]);\r\n    this.addHeroUser(this.userTeam, this.UserPositions());\r\n    this.addHeroUser(this.rivalTeam, this.RivalPositions());\r\n    this.gamePlay.redrawPositions(this.gameState.heroesList);\r\n  }\r\n\r\n}\r\n","/**\r\n * Entry point of app: don't change this\r\n */\r\nimport GamePlay from './GamePlay';\r\nimport GameController from './GameController';\r\nimport GameStateService from './GameStateService';\r\n\r\nconst gamePlay = new GamePlay();\r\ngamePlay.bindToDOM(document.querySelector('#game-container'));\r\n\r\nconst stateService = new GameStateService(localStorage);\r\n\r\nconst gameCtrl = new GameController(gamePlay, stateService);\r\ngameCtrl.init();\r\n\r\n// don't write your code here\r\n","export default class GameStateService {\r\n  constructor(storage) {\r\n    this.storage = storage;\r\n  }\r\n\r\n  save(state) {\r\n    this.storage.setItem('state', JSON.stringify(state));\r\n  }\r\n\r\n  load() {\r\n    try {\r\n      return JSON.parse(this.storage.getItem('state'));\r\n    } catch (e) {\r\n      throw new Error('Invalid state');\r\n    }\r\n  }\r\n}\r\n"],"names":["GameState","constructor","this","heroesList","characterSelected","permissionMove","level","statistic","points","deleteRival","from","object","GamePlay","gameState","boardSize","container","boardEl","cells","cellClickListeners","cellEnterListeners","cellLeaveListeners","newGameListeners","saveGameListeners","loadGameListeners","bindToDOM","HTMLElement","Error","drawUi","theme","checkBinding","innerHTML","newGameEl","querySelector","saveGameEl","loadGameEl","addEventListener","event","onNewGameClick","onSaveGameClick","onLoadGameClick","classList","add","i","cellEl","document","createElement","index","onCellEnter","onCellLeave","onCellClick","appendChild","Array","children","redrawPositions","positions","cell","position","charEl","character","type","healthEl","healthIndicatorEl","health","style","width","addCellEnterListener","callback","push","addCellLeaveListener","addCellClickListener","addNewGameListener","addSaveGameListener","addLoadGameListener","preventDefault","indexOf","currentTarget","forEach","o","call","showError","message","alert","showMessage","selectCell","color","deselectCell","remove","filter","startsWith","showCellTooltip","title","hideCellTooltip","showDamage","damage","Promise","resolve","damageEl","textContent","removeChild","setCursor","cursor","Team","characters","Set","has","name","addAll","toArray","clearSet","clear","delete","elem","generateTeam","allowedTypes","maxLevel","characterCount","team","Math","floor","random","length","characterGenerator","next","value","Character","id","attack","defence","levelUp","healthBefore","max","PositionedCharacter","Bowman","super","distance","cellAtack","Magician","Swordsman","Daemon","Undead","Vampire","GameController","gamePlay","stateService","userTeam","rivalTeam","userHeroes","rivalHeroes","init","themes","addHeroUser","UserPositions","RivalPositions","save","localStorage","getItem","loadGame","load","char","UserIsCharacter","RivalIsCharacter","getCellMove","userMoveClickCell","getCharacterByindex","getCellAttack","getAttack","cursors","hero","idx","find","some","size","userPosition","j","botPosition","randomPosition","copyPositions","item","splice","getSelectedCharacter","moving","calcPositionMove","includes","calcPositionAttack","brdSize","range","leftBorder","rightBorder","currentPosition","areaAttack","attacker","target","then","getDeletion","GameStatistic","rivalResponseAttack","state","rivalsTeam","usersTeam","rival","rangeAttack","rivalRange","rivalPosition","getRandom","sumPoints","reduce","a","b","scorePoints","nextLevel","storage","setItem","JSON","stringify","parse","e"],"sourceRoot":""}